/*
 * MicrovisionChain API Document
 *
 * API definition for MicrovisionChain provided apis
 *
 * API version: 3.0.8
 * Contact: heqiming@mvcapi.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mvcapi

import (
	"encoding/json"
)

// XpubBalance Registered Xpub balance including confirmed and unconfirmed
type XpubBalance struct {
	// confirmed balance
	Confirmed *int64 `json:"confirmed,omitempty"`
	// unconfirmed balance
	Unconfirmed *int64 `json:"unconfirmed,omitempty"`
}

// NewXpubBalance instantiates a new XpubBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXpubBalance() *XpubBalance {
	this := XpubBalance{}
	return &this
}

// NewXpubBalanceWithDefaults instantiates a new XpubBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXpubBalanceWithDefaults() *XpubBalance {
	this := XpubBalance{}
	return &this
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise.
func (o *XpubBalance) GetConfirmed() int64 {
	if o == nil || o.Confirmed == nil {
		var ret int64
		return ret
	}
	return *o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubBalance) GetConfirmedOk() (*int64, bool) {
	if o == nil || o.Confirmed == nil {
		return nil, false
	}
	return o.Confirmed, true
}

// HasConfirmed returns a boolean if a field has been set.
func (o *XpubBalance) HasConfirmed() bool {
	if o != nil && o.Confirmed != nil {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given int64 and assigns it to the Confirmed field.
func (o *XpubBalance) SetConfirmed(v int64) {
	o.Confirmed = &v
}

// GetUnconfirmed returns the Unconfirmed field value if set, zero value otherwise.
func (o *XpubBalance) GetUnconfirmed() int64 {
	if o == nil || o.Unconfirmed == nil {
		var ret int64
		return ret
	}
	return *o.Unconfirmed
}

// GetUnconfirmedOk returns a tuple with the Unconfirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XpubBalance) GetUnconfirmedOk() (*int64, bool) {
	if o == nil || o.Unconfirmed == nil {
		return nil, false
	}
	return o.Unconfirmed, true
}

// HasUnconfirmed returns a boolean if a field has been set.
func (o *XpubBalance) HasUnconfirmed() bool {
	if o != nil && o.Unconfirmed != nil {
		return true
	}

	return false
}

// SetUnconfirmed gets a reference to the given int64 and assigns it to the Unconfirmed field.
func (o *XpubBalance) SetUnconfirmed(v int64) {
	o.Unconfirmed = &v
}

func (o XpubBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Confirmed != nil {
		toSerialize["confirmed"] = o.Confirmed
	}
	if o.Unconfirmed != nil {
		toSerialize["unconfirmed"] = o.Unconfirmed
	}
	return json.Marshal(toSerialize)
}

type NullableXpubBalance struct {
	value *XpubBalance
	isSet bool
}

func (v NullableXpubBalance) Get() *XpubBalance {
	return v.value
}

func (v *NullableXpubBalance) Set(val *XpubBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableXpubBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableXpubBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXpubBalance(val *XpubBalance) *NullableXpubBalance {
	return &NullableXpubBalance{value: val, isSet: true}
}

func (v NullableXpubBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXpubBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
